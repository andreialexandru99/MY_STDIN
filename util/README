Andrei Alexandru-Razvan 333CB

Pentru implementarea temei am incercat sa respect pe cat posibil functionalitatea oferita
de biblioteca stdin, bineinteles simplificata.

Structura de baza a temei este SO_FILE, in care am ales sa folosesc un singur buffer pentru
IO, alaturi de campurile necesare lucrului cu acesta si cu structura in sine.

Citirile si scrierile sunt mereu facute mai intai din/in buffer, operatiile propriu-zise
fiind facute mereu in/din buffer.

Pentru implementarea so-ferror, am incercat initial sa ma folosesc de errno pentru a oferi
posibilitatea de a implementa erorile asemanator cazului in care biblioteca stdin ar fi folosita,
insa in urma unui comportament pe care nu am reusit sa il inteleg, care ducea la picarea unor teste,
am decis sa ma rezum la o implementare mai simpla, neinterpretabila.

Am implementat toate functionalitatile cerute, insa citirea si scrierea nu functioneaza
atunci cand datele contin si null terminator, operatiile oprindu-se la acestea. Implicit,
testele care includ acest lucru pica.

Consider ca tema este utila in masura in care ne familiarizeaza mai mult cu lucrul cu fisiere
si ne ajuta sa intelegem modul de functionare al bibliotecii standard de IO din C. In schimb,
consider ca testele oferite, dupa care este realizata si notarea, nu reflecta recomandarile
primite in cadrul laboratoarelor si limiteaza eficienta solutiei in anumite cazuri. Spre exemplu,
in cazul in care se doreste citirea/scrierea unui numar de octeti mai mare decat dimensiunea
buffer-ului, consider ca solutia optima ar fi sa se faca bypass acestuia pentru a evita un numar
mai mare decat necesar de apeluri de sistem. Initial aceasta a fost implementarea mea, dar am
schimbat-o pentru a trece testele in care aveam mai putine apeluri de sistem decat se dorea. De
asemenea, in cadrul laboratoarelor ne-a fost recomandat ca apelurile de read/write sa se faca intr-o
bucla pentru a ne asigura ca numarul dorit de octeti a fost scris. Facand acest lucru, majoritatea
testelor picau deoarece aveam un apel de sistem in plus.

Pentru compilare: "make" sau "make build". Rezultatul va fi biblioteca dinamica creata in acelasi
director. Link-ati aceasta biblioteca la compilarea executabilului.
